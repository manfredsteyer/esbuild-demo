{
  "version": 3,
  "sources": ["../host.ts"],
  "sourcesContent": ["\n    import { init as initFederationHost } from \"@module-federation/runtime\";\n\n    export const createVirtualRemoteModule = (name, ref, exports) => {\n      const genExports = exports.map(e =>\n        e === 'default'\n          ? 'export default mfLsZJ92.default;'\n          : `export const ${e} = mfLsZJ92[${JSON.stringify(e)}];`\n      ).join('');\n\n      const loadRef = `const mfLsZJ92 = await container.loadRemote(${JSON.stringify(ref)});`;\n\n      return `\n        const container = __FEDERATION__.__INSTANCES__.find(container => container.name === name) || __FEDERATION__.__INSTANCES__[0];\n        ${loadRef}\n        ${genExports}\n      `;\n    };\n\n    function encodeInlineESM(code) {\n      return 'data:text/javascript;charset=utf-8,' + encodeURIComponent(code);\n    }\n\n    const runtimePlugin = () => ({\n      name: 'import-maps-plugin',\n      async init(args) {\n        const remotePrefetch = args.options.remotes.map(async (remote) => {\n          console.log('remote', remote);\n          if (remote.type === 'esm') {\n            await import(remote.entry);\n          }\n        });\n\n        await Promise.all(remotePrefetch);\n        if (typeof moduleMap !== 'undefined') {\n          const map = Object.keys(moduleMap).reduce((acc, expose) => {\n            const importMap = importShim.getImportMap().imports;\n            const key = args.origin.name + expose.replace('.', '');\n            if (!importMap[key]) {\n              const encodedModule = encodeInlineESM(\n                createVirtualRemoteModule(args.origin.name, key, moduleMap[expose].exports)\n              );\n              acc[key] = encodedModule;\n            }\n            return acc;\n          }, {});\n\n          await importShim.addImportMap({ imports: map });\n        }\n\n        return args;\n      }\n    });\n\n     initFederationHost({\n      name: \"host\",\n      remotes: [{\"name\":\"remote\",\"entry\":\"http://localhost:3000/remoteEntry.js\",\"alias\":\"remote\",\"type\":\"esm\"}],\n      shared: {\"react\": {\n      \"package\": \"react\",\n      \"version\": \"18.3.1\",\n      \"scope\": \"default\",\n      \"get\": async () => await import('federationShare/react'),\n      \"shareConfig\": {\n        \"singleton\": true,\n        \"requiredVersion\": \"^18.3.1\",\n        \"eager\": undefined,\n        \"strictVersion\": true\n      }\n    },\n\"rxjs\": {\n      \"package\": \"rxjs\",\n      \"version\": \"7.8.1\",\n      \"scope\": \"default\",\n      \"get\": async () => await import('federationShare/rxjs'),\n      \"shareConfig\": {\n        \"singleton\": true,\n        \"requiredVersion\": \"^7.8.1\",\n        \"eager\": undefined,\n        \"strictVersion\": true\n      }\n    },\n},\n      plugins: [runtimePlugin()],\n    });\n  (async () => {\n    // workaround to async issues in my runtime, need to add async init\n    setTimeout(async () => {\n        const bootstrap = (await import('./bootstrap-host')).default\n\n        console.log(bootstrap)\n        //@ts-ignore\n        bootstrap();\n    }, 400);\n})();\n"],
  "mappings": ";;;;;;AAGW,IAAM,4BAA4B,CAAC,MAAM,KAAK,YAAY;AAC/D,QAAM,aAAa,QAAQ;AAAA,IAAI,OAC7B,MAAM,YACF,qCACA,gBAAgB,CAAC,eAAe,KAAK,UAAU,CAAC,CAAC;AAAA,EACvD,EAAE,KAAK,EAAE;AAET,QAAM,UAAU,+CAA+C,KAAK,UAAU,GAAG,CAAC;AAElF,SAAO;AAAA;AAAA,UAEH,OAAO;AAAA,UACP,UAAU;AAAA;AAEhB;AAEA,SAAS,gBAAgB,MAAM;AAC7B,SAAO,wCAAwC,mBAAmB,IAAI;AACxE;AAEA,IAAM,gBAAgB,OAAO;AAAA,EAC3B,MAAM;AAAA,EACN,MAAM,KAAK,MAAM;AACf,UAAM,iBAAiB,KAAK,QAAQ,QAAQ,IAAI,OAAO,WAAW;AAChE,cAAQ,IAAI,UAAU,MAAM;AAC5B,UAAI,OAAO,SAAS,OAAO;AACzB,cAAM,OAAO,OAAO;AAAA,MACtB;AAAA,IACF,CAAC;AAED,UAAM,QAAQ,IAAI,cAAc;AAChC,QAAI,OAAO,cAAc,aAAa;AACpC,YAAM,MAAM,OAAO,KAAK,SAAS,EAAE,OAAO,CAAC,KAAK,WAAW;AACzD,cAAM,YAAY,WAAW,aAAa,EAAE;AAC5C,cAAM,MAAM,KAAK,OAAO,OAAO,OAAO,QAAQ,KAAK,EAAE;AACrD,YAAI,CAAC,UAAU,GAAG,GAAG;AACnB,gBAAM,gBAAgB;AAAA,YACpB,0BAA0B,KAAK,OAAO,MAAM,KAAK,UAAU,MAAM,EAAE,OAAO;AAAA,UAC5E;AACA,cAAI,GAAG,IAAI;AAAA,QACb;AACA,eAAO;AAAA,MACT,GAAG,CAAC,CAAC;AAEL,YAAM,WAAW,aAAa,EAAE,SAAS,IAAI,CAAC;AAAA,IAChD;AAEA,WAAO;AAAA,EACT;AACF;AAEC,KAAmB;AAAA,EAClB,MAAM;AAAA,EACN,SAAS,CAAC,EAAC,QAAO,UAAS,SAAQ,wCAAuC,SAAQ,UAAS,QAAO,MAAK,CAAC;AAAA,EACxG,QAAQ;AAAA,IAAC,SAAS;AAAA,MAClB,WAAW;AAAA,MACX,WAAW;AAAA,MACX,SAAS;AAAA,MACT,OAAO,YAAY,MAAM,OAAO,qBAAuB;AAAA,MACvD,eAAe;AAAA,QACb,aAAa;AAAA,QACb,mBAAmB;AAAA,QACnB,SAAS;AAAA,QACT,iBAAiB;AAAA,MACnB;AAAA,IACF;AAAA,IACJ,QAAQ;AAAA,MACF,WAAW;AAAA,MACX,WAAW;AAAA,MACX,SAAS;AAAA,MACT,OAAO,YAAY,MAAM,OAAO,oBAAsB;AAAA,MACtD,eAAe;AAAA,QACb,aAAa;AAAA,QACb,mBAAmB;AAAA,QACnB,SAAS;AAAA,QACT,iBAAiB;AAAA,MACnB;AAAA,IACF;AAAA,EACJ;AAAA,EACM,SAAS,CAAC,cAAc,CAAC;AAC3B,CAAC;AAAA,CACF,YAAY;AAEX,aAAW,YAAY;AACnB,UAAM,aAAa,MAAM,OAAO,8BAAkB,GAAG;AAErD,YAAQ,IAAI,SAAS;AAErB,cAAU;AAAA,EACd,GAAG,GAAG;AACV,GAAG;",
  "names": []
}
